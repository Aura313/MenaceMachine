{"ast":null,"code":"var _jsxFileName = \"/Users/tanyashah/dev/sem-II/menace-fe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './index.css';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(_ref) {\n  let {\n    value,\n    onClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\n\nfunction Restart(_ref2) {\n  let {\n    onClick\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"restart\",\n    onClick: onClick,\n    children: \"Play again\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Restart;\n\nfunction StartGame(_ref3) {\n  let {\n    onClick\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"restart\",\n    onClick: onClick,\n    children: \"Start again\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = StartGame;\n\nfunction App() {\n  _s();\n\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [isXNext, setIsXNext] = useState(true);\n  const [currMove, setCurrMove] = useState([]);\n  const [label, setLabel] = useState('---------');\n  const nextSymbol = isXNext ? 'X' : 'O';\n  const winner = calculateWinner(squares); // useEffect(() => {\n  // const fetchUsers = async () => {\n  //   console.log(nextSymbol, label, 'label', 'nextSymbol');\n  //   const res = await axios\n  //     .get(`http://localhost:8080/menace/next/${label}/${nextSymbol}`)\n  //     .then((res) => {\n  //       console.log(res.data, 'sksksk');\n  //     })\n  //     .catch((e) => console.log(e, 'error'));\n  //     return res;\n  // };\n  //   fetchUsers();\n  // }, []);\n\n  function renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: squares[i],\n      onClick: () => {\n        if (squares[i] != null || winner != null) {\n          return;\n        }\n\n        const nextSquares = squares.slice();\n        nextSquares[i] = nextSymbol;\n        let test = []; // console.log(nextSquares, \"nextSquares\");\n\n        nextSquares.map(i => {\n          if (i == null) {\n            test.push('-');\n          } else {\n            test.push(i);\n          }\n        });\n        setLabel(test);\n        console.log(test.join(''), 'test');\n        setSquares(nextSquares);\n        setIsXNext(!isXNext); // toggle turns\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n  function calculateWinner(squares) {\n    const possibleLines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]]; // go over all possibly winning lines and check if they consist of only X's/only O's\n\n    for (let i = 0; i < possibleLines.length; i++) {\n      const [a, b, c] = possibleLines[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n\n  function isBoardFull(squares) {\n    for (let i = 0; i < squares.length; i++) {\n      if (squares[i] == null) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function getStatus() {\n    if (winner) {\n      return 'Winner: ' + winner;\n    } else if (isBoardFull(squares)) {\n      return 'Draw!';\n    } else {\n      return 'Next player: ' + (isXNext ? 'X' : 'O');\n    }\n  }\n\n  function renderRestartButton() {\n    return /*#__PURE__*/_jsxDEV(Restart, {\n      onClick: () => {\n        setSquares(Array(9).fill(null));\n        setIsXNext(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n\n  function renderstartButton() {\n    return /*#__PURE__*/_jsxDEV(StartGame, {\n      onClick: async () => {\n        await axios.get(`http://localhost:8080/menace/next/${label}/${nextSymbol}`).then(res => {\n          console.log(res.data, 'sksksk');\n        }).catch(e => console.log(e, 'error')); // setSquares(Array(9).fill(null));\n\n        setIsXNext(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: [renderSquare(0), renderSquare(1), renderSquare(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: [renderSquare(3), renderSquare(4), renderSquare(5)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: [renderSquare(6), renderSquare(7), renderSquare(8)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: getStatus()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"restart-button\",\n        children: renderRestartButton()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"restart-button\",\n        children: renderstartButton()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Izctwon/x3bAJQ927wYttXfRrWc=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Restart\");\n$RefreshReg$(_c3, \"StartGame\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/tanyashah/dev/sem-II/menace-fe/src/App.js"],"names":["React","useState","useEffect","axios","Square","value","onClick","Restart","StartGame","App","squares","setSquares","Array","fill","isXNext","setIsXNext","currMove","setCurrMove","label","setLabel","nextSymbol","winner","calculateWinner","renderSquare","i","nextSquares","slice","test","map","push","console","log","join","possibleLines","length","a","b","c","isBoardFull","getStatus","renderRestartButton","renderstartButton","get","then","res","data","catch","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './index.css';\nimport axios from 'axios';\nimport './App.css';\n\nfunction Square({ value, onClick }) {\n  return (\n    <button className='square' onClick={onClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Restart({ onClick }) {\n  return (\n    <button className='restart' onClick={onClick}>\n      Play again\n    </button>\n  );\n}\n\nfunction StartGame({ onClick }) {\n  return (\n    <button className='restart' onClick={onClick}>\n      Start again\n    </button>\n  );\n}\nfunction App() {\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [isXNext, setIsXNext] = useState(true);\n  const [currMove, setCurrMove] = useState([]);\n  const [label, setLabel] = useState('---------');\n  const nextSymbol = isXNext ? 'X' : 'O';\n\n  const winner = calculateWinner(squares);\n\n  // useEffect(() => {\n  // const fetchUsers = async () => {\n  //   console.log(nextSymbol, label, 'label', 'nextSymbol');\n\n  //   const res = await axios\n  //     .get(`http://localhost:8080/menace/next/${label}/${nextSymbol}`)\n  //     .then((res) => {\n  //       console.log(res.data, 'sksksk');\n\n  //     })\n  //     .catch((e) => console.log(e, 'error'));\n  //     return res;\n  // };\n  //   fetchUsers();\n  // }, []);\n\n  function renderSquare(i) {\n    return (\n      <Square\n        value={squares[i]}\n        onClick={() => {\n          if (squares[i] != null || winner != null) {\n            return;\n          }\n          const nextSquares = squares.slice();\n          nextSquares[i] = nextSymbol;\n          let test = [];\n          // console.log(nextSquares, \"nextSquares\");\n          nextSquares.map((i) => {\n            if (i == null) {\n              test.push('-');\n            } else {\n              test.push(i);\n            }\n          });\n\n          setLabel(test);\n\n          console.log(test.join(''), 'test');\n\n          setSquares(nextSquares);\n\n          setIsXNext(!isXNext); // toggle turns\n        }}\n      />\n    );\n  }\n  function calculateWinner(squares) {\n    const possibleLines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    // go over all possibly winning lines and check if they consist of only X's/only O's\n    for (let i = 0; i < possibleLines.length; i++) {\n      const [a, b, c] = possibleLines[i];\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n\n  function isBoardFull(squares) {\n    for (let i = 0; i < squares.length; i++) {\n      if (squares[i] == null) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  function getStatus() {\n    if (winner) {\n      return 'Winner: ' + winner;\n    } else if (isBoardFull(squares)) {\n      return 'Draw!';\n    } else {\n      return 'Next player: ' + (isXNext ? 'X' : 'O');\n    }\n  }\n\n  function renderRestartButton() {\n    return (\n      <Restart\n        onClick={() => {\n          setSquares(Array(9).fill(null));\n          setIsXNext(true);\n        }}\n      />\n    );\n  }\n\n  function renderstartButton() {\n    return (\n      <StartGame\n        onClick={async () => {\n          await axios\n            .get(`http://localhost:8080/menace/next/${label}/${nextSymbol}`)\n            .then((res) => {\n              console.log(res.data, 'sksksk');\n            })\n            .catch((e) => console.log(e, 'error'));\n\n          // setSquares(Array(9).fill(null));\n          setIsXNext(true);\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className='container'>\n      <div className='game'>\n        <div className='game-board'>\n          <div className='board-row'>\n            {renderSquare(0)}\n            {renderSquare(1)}\n            {renderSquare(2)}\n          </div>\n          <div className='board-row'>\n            {renderSquare(3)}\n            {renderSquare(4)}\n            {renderSquare(5)}\n          </div>\n          <div className='board-row'>\n            {renderSquare(6)}\n            {renderSquare(7)}\n            {renderSquare(8)}\n          </div>\n        </div>\n        <div className='game-info'>{getStatus()}</div>\n        <div className='restart-button'>{renderRestartButton()}</div>\n        <div className='restart-button'>{renderstartButton()}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}