{"ast":null,"code":"var _jsxFileName = \"/Users/tanyashah/dev/sem-II/menace-fe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './index.css';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(_ref) {\n  let {\n    value,\n    onClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\n\nfunction Restart(_ref2) {\n  let {\n    onClick\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"restart\",\n    onClick: onClick,\n    children: \"Play again\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Restart;\n\nfunction App() {\n  _s();\n\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [isXNext, setIsXNext] = useState(true);\n  const nextSymbol = isXNext ? 'X' : 'O';\n  const winner = calculateWinner(squares);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      console.log(nextSymbol, \"nextSymbol\");\n      await axios.get(`http://localhost:8080/menace/next/abc/${nextSymbol}`).then(res => {\n        console.log(res.data, 'sksksk');\n      }).catch(e => console.log(e, 'error'));\n    };\n\n    fetchUsers();\n  }, []);\n\n  function renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: squares[i],\n      onClick: () => {\n        if (squares[i] != null || winner != null) {\n          return;\n        }\n\n        const nextSquares = squares.slice();\n        nextSquares[i] = nextSymbol;\n        let test = []; // console.log(nextSquares, \"nextSquares\");\n\n        nextSquares.map(i => {\n          if (i == null) {\n            test.push('-');\n          } else {\n            test.push(i);\n          }\n        });\n        console.log(test.join(\"\"), 'test');\n        setSquares(nextSquares);\n        setIsXNext(!isXNext); // toggle turns\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n  function calculateWinner(squares) {\n    const possibleLines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]]; // go over all possibly winning lines and check if they consist of only X's/only O's\n\n    for (let i = 0; i < possibleLines.length; i++) {\n      const [a, b, c] = possibleLines[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n\n  function isBoardFull(squares) {\n    for (let i = 0; i < squares.length; i++) {\n      if (squares[i] == null) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function getStatus() {\n    if (winner) {\n      return 'Winner: ' + winner;\n    } else if (isBoardFull(squares)) {\n      return 'Draw!';\n    } else {\n      return 'Next player: ' + (isXNext ? 'X' : 'O');\n    }\n  }\n\n  function renderRestartButton() {\n    return /*#__PURE__*/_jsxDEV(Restart, {\n      onClick: () => {\n        setSquares(Array(9).fill(null));\n        setIsXNext(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: [renderSquare(0), renderSquare(1), renderSquare(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: [renderSquare(3), renderSquare(4), renderSquare(5)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: [renderSquare(6), renderSquare(7), renderSquare(8)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: getStatus()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"restart-button\",\n        children: renderRestartButton()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"U+V1um8YdeGhentl+3RqL0DPs0Q=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Restart\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/tanyashah/dev/sem-II/menace-fe/src/App.js"],"names":["React","useState","useEffect","axios","Square","value","onClick","Restart","App","squares","setSquares","Array","fill","isXNext","setIsXNext","nextSymbol","winner","calculateWinner","fetchUsers","console","log","get","then","res","data","catch","e","renderSquare","i","nextSquares","slice","test","map","push","join","possibleLines","length","a","b","c","isBoardFull","getStatus","renderRestartButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './index.css';\nimport axios from 'axios';\nimport './App.css';\n\nfunction Square({ value, onClick }) {\n  return (\n    <button className='square' onClick={onClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Restart({ onClick }) {\n  return (\n    <button className='restart' onClick={onClick}>\n      Play again\n    </button>\n  );\n}\nfunction App() {\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [isXNext, setIsXNext] = useState(true);\n  const nextSymbol = isXNext ? 'X' : 'O';\n\n  const winner = calculateWinner(squares);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      console.log(nextSymbol, \"nextSymbol\")\n      await axios\n        .get(`http://localhost:8080/menace/next/abc/${nextSymbol}`)\n        .then((res) => {\n          console.log(res.data, 'sksksk');\n        })\n        .catch((e) => console.log(e, 'error'));\n    };\n    fetchUsers();\n  }, []);\n\n  function renderSquare(i) {\n    return (\n      <Square\n        value={squares[i]}\n        onClick={() => {\n          if (squares[i] != null || winner != null) {\n            return;\n          }\n          const nextSquares = squares.slice();\n          nextSquares[i] = nextSymbol;\n          let test = [];\n          // console.log(nextSquares, \"nextSquares\");\n          nextSquares.map((i) => {\n            if (i == null) {\n              test.push('-');\n            } else {\n              test.push(i);\n            }\n          });\n\n          console.log(test.join(\"\"), 'test');\n\n          setSquares(nextSquares);\n\n          setIsXNext(!isXNext); // toggle turns\n        }}\n      />\n    );\n  }\n  function calculateWinner(squares) {\n    const possibleLines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    // go over all possibly winning lines and check if they consist of only X's/only O's\n    for (let i = 0; i < possibleLines.length; i++) {\n      const [a, b, c] = possibleLines[i];\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n\n  function isBoardFull(squares) {\n    for (let i = 0; i < squares.length; i++) {\n      if (squares[i] == null) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  function getStatus() {\n    if (winner) {\n      return 'Winner: ' + winner;\n    } else if (isBoardFull(squares)) {\n      return 'Draw!';\n    } else {\n      return 'Next player: ' + (isXNext ? 'X' : 'O');\n    }\n  }\n\n  function renderRestartButton() {\n    return (\n      <Restart\n        onClick={() => {\n          setSquares(Array(9).fill(null));\n          setIsXNext(true);\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className='container'>\n      <div className='game'>\n        <div className='game-board'>\n          <div className='board-row'>\n            {renderSquare(0)}\n            {renderSquare(1)}\n            {renderSquare(2)}\n          </div>\n          <div className='board-row'>\n            {renderSquare(3)}\n            {renderSquare(4)}\n            {renderSquare(5)}\n          </div>\n          <div className='board-row'>\n            {renderSquare(6)}\n            {renderSquare(7)}\n            {renderSquare(8)}\n          </div>\n        </div>\n        <div className='game-info'>{getStatus()}</div>\n        <div className='restart-button'>{renderRestartButton()}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}